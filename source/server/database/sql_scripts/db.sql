CREATE TABLE IF NOT EXISTS customers(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    FIO VARCHAR(50) NOT NULL,
    number_phone VARCHAR(13)
);
CREATE TABLE IF NOT EXISTS managers(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    FIO VARCHAR(50) NOT NULL,
    number_phone VARCHAR(13) NOT NULL,
    passport VARCHAR(10) NOT NULL
);
CREATE TABLE IF NOT EXISTS applications(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    desired_travel VARCHAR(30) NOT NULL,
    customer_id INTEGER NOT NULL REFERENCES customers(id) ON DELETE CASCADE ON UPDATE NO ACTION,
    manager_id INTEGER NOT NULL REFERENCES managers(id) ON DELETE CASCADE ON UPDATE NO ACTION,
    start_date DATE NOT NULL,
    end_date DATETIME DEFAULT '0000-00-00 00:00:00',
    status BOOLEAN DEFAULT false
);
CREATE TABLE IF NOT EXISTS implementers(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(40) NOT NULL,
    description VARCHAR(60) NOT NULL,
    contact_detail VARCHAR(40) NOT NULL
);
CREATE TABLE IF NOT EXISTS contracts(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    application_id INTEGER NOT NULL REFERENCES applications(id) ON DELETE CASCADE ON UPDATE NO ACTION,
    implementer_id INTEGER REFERENCES implementers(id) ON DELETE CASCADE ON UPDATE NO ACTION,
    comment_imp VARCHAR(80)
);
CREATE TABLE IF NOT EXISTS posts(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(20) NOT NULL,
    authority VARCHAR(20) NOT NULL
);
CREATE TABLE IF NOT EXISTS users(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    login VARCHAR(15) NOT NULL,
    password VARCHAR(20) NOT NULL,
    post_id INTEGER NOT NULL REFERENCES posts(id) ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TRIGGER IF NOT EXISTS update_date_trigger
AFTER UPDATE ON applications
FOR EACH ROW
WHEN NEW.status == 1
BEGIN
UPDATE applications SET end_date = CURRENT_TIMESTAMP WHERE id = NEW.id;
INSERT INTO contracts(application_id) VALUES(NEW.id);
END;